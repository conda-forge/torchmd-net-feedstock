{% set name = "torchmd-net" %}
{% set version = "2.4.1" %}
# see github.com/conda-forge/conda-forge.github.io/issues/1059 for naming discussion
{% set torch_proc_type = "cuda" if cuda_compiler_version != "None" else "cpu" %}

{% if cuda_compiler_version in (None, "None", True, False) %}
{% set cuda_major = 0 %}
{% else %}
{% set cuda_major = environ.get("cuda_compiler_version", "11.8").split(".")[0] | int %}
{% endif %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/torchmd/torchmd-net/archive/{{ version }}.tar.gz
  sha256: 0d264af31146df1415b840ff0a4c7f9bb77d1458a6ffff44bf84af73d26431b6

build:
  entry_points:
    - torchmd-train = torchmdnet.scripts.train:main
  number: 0
  string: cuda{{ cuda_compiler_version | replace('.', '') }}py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != "None"]
  string: cpu_py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version == "None"]
# Mainly due to NNPOps not having a windows package
  skip: true  # [win]
  rpaths:
    - lib/
    - {{ SP_DIR }}/torch/lib
requirements:
  build:
    - python                                 # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    - {{ compiler('cxx') }}
    - {{ stdlib("c") }}
    - {{ compiler('cuda') }}  # [cuda_compiler_version not in (undefined, 'None')]
    - cuda-version {{ cuda_compiler_version }}  # [cuda_compiler_version not in (undefined, 'None')]
    {% if cuda_major >= 12 %}
    - cuda-cudart-dev
    # No cuda-driver-dev in windows
    - cuda-driver-dev  # [linux]
    - libcufft-dev
    - libcurand-dev
    - libcublas-dev
    - cuda-nvrtc-dev
    - cuda-nvtx-dev
    - cuda-profiler-api
    - cuda-nvrtc-dev
    - libcusparse-dev
    - libcusolver-dev
    {% endif %}
  host:
    - python
    # Only needed for Python 3.8 and below
    # xref: https://github.com/conda-forge/linux-sysroot-feedstock/issues/52
    - libxcrypt  # [py <= 38]
    - pip
    - pytorch =*={{ torch_proc_type }}*
    - setuptools <70
  run:
    - python
    # Also needed by pytorch for the compile functionality
    - libxcrypt  # [py <= 38]
    - h5py
    - matplotlib-base
    - nnpops
    - pytorch_geometric
    - lightning
    - pydantic <2
    - torchmetrics
    # This is a dependency coming from torchmetrics
    - pretty_errors
    - tqdm
    - aiohttp
    {% if cuda_major >= 12 %}
    - cuda-cudart
    {% endif %}
  run_constrained:
    # additional run constraint to the one from the (version-only) run_export;
    # constraining the CPU builds to CPU pytorch isn't 100% necessary, but cleaner
    - pytorch =*={{ torch_proc_type }}*

test:
  imports:
    - torchmdnet
  commands:
    - pip check
    - torchmd-train --help
    - pytest -v -s tests  # [py<3.12]
    # Pytorch compile does not support 3.12
    - pytest -v -k "not compile" -s tests  # [py>=3.12]
  requires:
    - pip
    - pytest
    # Needed by pytorch for the compile functionality
    - gxx  # [linux]
    - clang  # [osx]
    - libxcrypt  # [py <= 38]
  source_files:
    - tests
    - examples

about:
  home: https://github.com/torchmd/torchmd-net
  license: MIT
  license_family: MIT
  license_file: README.md
  summary: 'State of the art Pytorch Neural Network Potentials (NNPs)'
  description: |
    TorchMD-NET provides state-of-the-art neural networks potentials (NNPs) and a mechanism to train them. It offers efficient and fast implementations of several NNPs and it is integrated in GPU-accelerated molecular dynamics code like ACEMD, OpenMM and TorchMD. TorchMD-NET exposes its NNPs as PyTorch modules.
  doc_url: https://github.com/torchmd/torchmd-net
  dev_url: https://github.com/torchmd/torchmd-net

extra:
  recipe-maintainers:
    - RaulPPelaez
    - raimis
    - giadefa
