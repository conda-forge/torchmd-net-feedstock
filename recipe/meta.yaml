{% set name = "torchmd-net" %}
{% set version = "2.4.5" %}
# see github.com/conda-forge/conda-forge.github.io/issues/1059 for naming discussion
{% set torch_proc_type = "cuda" if cuda_compiler_version != "None" else "cpu" %}

{% if cuda_compiler_version in (None, "None", True, False) %}
{% set cuda_major = 0 %}
{% else %}
{% set cuda_major = environ.get("cuda_compiler_version", "11.8").split(".")[0] | int %}
{% endif %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  # url: https://github.com/torchmd/torchmd-net/archive/{{ version }}.tar.gz
  # sha256: 5d07feb370f3fb54c74f5801aefd3736ac1b94dbf51cfce57cba55c7249fecf1
  git_url: https://github.com/torchmd/torchmd-net.git
  git_rev: "35dbb903bb9ed09045bec1dc90b7ca48b5df90a6"

build:
  # Currently there is no pytorch 2.5.1 for Windows and CUDA 11.8. Only 12+. Same for aarch64.
  skip: true  # [win and (cuda_compiler_version == '11.8')]
  skip: true  # [aarch64 and (cuda_compiler_version == '11.8')]
  entry_points:
    - torchmd-train = torchmdnet.scripts.train:main
  number: 0
  string: cuda{{ cuda_compiler_version | replace('.', '') }}py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != "None"]
  string: cpu_py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version == "None"]
  rpaths:
    - lib/
    - {{ SP_DIR }}/torch/lib
  missing_dso_whitelist:
    - "*/c10.dll"         # [win]
    - "*/torch_cpu.dll"   # [win]
    - "*/c10_cuda.dll"    # [win]

requirements:
  build:
    - {{ compiler('cxx') }}
    - {{ stdlib("c") }}
    - {{ compiler('cuda') }}                    # [cuda_compiler_version not in (undefined, 'None')]
    - cuda-version {{ cuda_compiler_version }}  # [cuda_compiler_version not in (undefined, 'None')]
    - python                                    # [build_platform != target_platform]
    - cross-python_{{ target_platform }}        # [build_platform != target_platform]
    - pytorch =*={{ torch_proc_type }}*
    {% if cuda_major >= 12 %}
    - cuda-cudart-dev
    - cuda-driver-dev                           # [linux]
    - libcufft-dev     
    - libcurand-dev    
    - libcublas-dev    
    - cuda-nvrtc-dev   
    - cuda-nvtx-dev    
    - cuda-profiler-api
    - libcusparse-dev
    - libcusolver-dev
    {% endif %}
  host:
    - python
    - setuptools
    - pip
    - pytorch =*={{ torch_proc_type }}*
    - cuda-version {{ cuda_compiler_version }}  # [cuda_compiler_version not in (undefined, 'None')]
    {% if cuda_major >= 12 %}
    - cuda-cudart-dev
    {% endif %}
  run:
    - python
    - h5py
    - pytorch_geometric
    - lightning
    - torchmetrics
    - tqdm
    {% if cuda_major >= 12 %}
    - cuda-cudart
    {% endif %}
  run_constrained:
    - pytorch =*={{ torch_proc_type }}*

test:
  imports:
    - torchmdnet
  commands:
    - pip check
    - torchmd-train --help
    - pytest -v -s tests/test_model_utils.py
    - pytest -v -s tests/test_module.py -k "test_dummy_train"
  requires:
    - pip
    - pytest
    # Needed by pytorch for the compile functionality
    - gxx  # [linux]
    - clang  # [osx]
  source_files:
    - tests
    - examples

about:
  home: https://github.com/torchmd/torchmd-net
  license: MIT
  license_family: MIT
  license_file: README.md
  summary: 'State of the art Pytorch Neural Network Potentials (NNPs)'
  description: |
    TorchMD-NET provides state-of-the-art neural networks potentials (NNPs) and a mechanism to train them. It offers efficient and fast implementations of several NNPs and it is integrated in GPU-accelerated molecular dynamics code like ACEMD, OpenMM and TorchMD. TorchMD-NET exposes its NNPs as PyTorch modules.
  doc_url: https://github.com/torchmd/torchmd-net
  dev_url: https://github.com/torchmd/torchmd-net

extra:
  recipe-maintainers:
    - sef43
    - stefdoerr
    - RaulPPelaez
    - raimis
    - giadefa
